{"version":3,"sources":["webpack:///./src/app/home.component.ts","webpack:///./src/app/login.component.ts","webpack:///./src/app/patient.component.ts","webpack:///./src/app/view-patients.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.service.ts","webpack:///./src/assets/css/login.css","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/add-patient.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/find-patient.component.ts","webpack:///./src/app/foo.component.ts","webpack:///./src/app/home-description.component.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Component} from '@angular/core';\nimport {AppService} from './app.service'\n \n@Component({\n    selector: 'home-header',\n    providers: [AppService],\n  template: `\n  \n\n    \n    \n    \n    \n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <!--<a class=\"navbar-brand\" href=\"#\">Navbar</a>-->\n  <img  class=\"img-responsive\" src=\"assets/images/ang.png\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n        \n      </li>\n      <!--\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"http://51.141.9.85:5555/api/my-patient-microservice/swagger-ui.html\">Swagger 2.0</a>\n      </li>\n      -->\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownSwagger\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Swagger\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a class=\"dropdown-item\" target=\"_blank\" href=\"http://51.141.9.85:5555/api/my-patient-microservice/swagger-ui.html\">Patients</a>        \n        </div>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Actions\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a class=\"dropdown-item\" routerLink=\"/viewpatients\">View Patients</a>\n          <a class=\"dropdown-item\" routerLink=\"/addpatient\">Add a Patient</a>\n          <a class=\"dropdown-item\" routerLink=\"/findpatient\">Find/Edit a Patient</a>  \n          <a class=\"dropdown-item\" routerLink=\"/deletepatient\">Delete Patient</a> \n                \n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" routerLink=\"/foo\">Something else here!!</a>\n          \n        </div>\n      </li>\n      <!--\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n      </li>\n      -->\n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <button class=\"btn btn-outline-success my-2 my-sm-0\"(click)=\"logout()\">Logout</button>\n    </form>\n  </div>\n</nav>\n    \n    \n    <!-- <foo-details></foo-details> -->\n    <!-- <patient-details></patient-details>-->\n`\n})\n \nexport class HomeComponent {\n \n   \n    constructor(private _service:AppService){}\n \n    ngOnInit(){\n        this._service.checkCredentials();\n    }\n \n    logout() {\n        this._service.logout();\n    }\n    \n    //gotoDetail(): void {\n    //this.router.navigate(['/detail']);\n  //}\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home.component.ts","import { Component } from '@angular/core';\nimport {AppService} from './app.service'\n\n@Component({\n  selector: 'login-form',\n  providers: [AppService], \n  styleUrls: ['../assets/css/login.css'], \n  template: `\n  \n<body class=\"my-login-page\">  \n<section class=\"h-100\">\n\t\t<div class=\"container h-100\">\n\t\t\t<div class=\"row justify-content-md-center h-100\">\n\t\t\t\t<div class=\"card-wrapper\">\n\t\t\t\t\t<div class=\"brand\">\n\t\t\t\t\t\t<img src=\"../assets/images/ang.png\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"card fat\">\n\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t<h4 class=\"card-title\">Login</h4>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label>Username</label>\n\t\t\t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" [(ngModel)]=\"loginData.username\" />\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<label for=\"password\">Password\n\t\t\t\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\t\t\t<a href=\"forgot.html\" class=\"float-right\">\n\t\t\t\t\t\t\t\t\t\t\tForgot Password?\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input class=\"form-control\" type=\"password\"  [(ngModel)]=\"loginData.password\"/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\"> Remember Me\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div\n\t\t\t\t\t\t\t\t-->\n\n\t\t\t\t\t\t\t\t<div class=\"form-group no-margin\">\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-primary pull-right\" (click)=\"login()\" type=\"submit\">Login</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"footer\">\n\t\t\t\t\t\tCopyright &copy; 2018 &mdash; Saj Issa \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\t</body>\n\t\n    `\n})\nexport class LoginComponent {\n    public loginData = {username: \"admin\", password: \"admin\"};\n\n    constructor(private _service:AppService) {}\n \n    login() {\n        this._service.obtainAccessToken(this.loginData);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login.component.ts","import { Component, OnInit } from '@angular/core';\nimport {AppService, Patient} from './app.service'\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'patient-details',\n  providers: [AppService],\n  template: `\n  \n   <home-header></home-header> \n  \n  <div class=\"container-fluid\">\n    <h1 class=\"col-sm-12\">All Patients</h1>\n</div>\n\n\n \n <div class=\"container\">\n <div class=\"row\">\n <table class=\"table table-bordered\">\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Name</th>\n      <th>NHS ID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let patient of patients\">\n      <th scope=\"row\">{{patient.id}}</th>\n      <td>{{patient.name}}</td>\n      <td>{{patient.nhsid}}</td>\n    </tr>\n  </tbody>\n</table>\n\n </div>\n </div>\n \n  `\n})\n\nexport class PatientComponent {\n\n    patients: Patient[];   \n    observablePatients: Observable<Patient[]>\n    \n    public patient = new Patient(1,'sample foo','kk');\n    private patientsUrl = 'http://51.141.9.85:5555/api/my-patient-microservice/demo/getpatient?id=1';\n    \n    constructor(private _service:AppService, private _http: Http) {}\n\n\tngOnInit(): void {\n\t    \n        //this.observableFoos = this.getAllPatientWithObservable()\n        this.observablePatients = this._service.getAllPatientWithObservable()\n        \n        this.observablePatients.subscribe(\n      \t\tpatients => this.patients = patients\n      \t);\n      \n        \n\t}\n  \n    // this.foosUrl+this.foo.id\n    getPatient(){\n        this._service.getResource(this.patientsUrl)\n         .subscribe(\n                     data => this.patient = data,\n                     error =>  this.patient.name = 'Error');\n    }\n    \n    \n    \n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/patient.component.ts","import { Component, OnInit } from '@angular/core';\nimport {AppService, Patient} from './app.service'\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'view-patients-details',\n  providers: [AppService],\n  template: `\n  \n   <home-header></home-header> \n  \n  <div class=\"container-fluid\">\n    <h1 class=\"col-sm-12\">All Patients</h1>\n</div>\n\n\n \n <div class=\"container\">\n <div class=\"row\">\n <table class=\"table table-bordered\">\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Name</th>\n      <th>NHS ID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let patient of patients\">\n      <th scope=\"row\">{{patient.id}}</th>\n      <td>{{patient.name}}</td>\n      <td>{{patient.nhsid}}</td>\n    </tr>\n  </tbody>\n</table>\n\n </div>\n </div>\n \n  `\n})\n\nexport class ViewPatientsComponent {\n\n    patients: Patient[];   \n    observablePatients: Observable<Patient[]>\n    \n    public patient = new Patient(1,'sample foo','kk');\n    private patientsUrl = 'http://51.141.9.85:5555/api/my-patient-microservice/demo/getpatient?id=1';\n    \n    constructor(private _service:AppService, private _http: Http) {}\n\n\tngOnInit(): void {\n\t    \n        //this.observableFoos = this.getAllPatientWithObservable()\n        this.observablePatients = this._service.getAllPatientWithObservable()\n        \n        this.observablePatients.subscribe(\n      \t\tpatients => this.patients = patients\n      \t);\n      \n        \n\t}\n  \n    // this.foosUrl+this.foo.id\n    getPatient(){\n        this._service.getResource(this.patientsUrl)\n         .subscribe(\n                     data => this.patient = data,\n                     error =>  this.patient.name = 'Error');\n    }\n    \n    \n    \n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/view-patients.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport { Cookie } from 'ng2-cookies';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\nexport class Foo {\n  constructor(\n    public id: number,\n    public name: string,\n    public nhsid: string) { }    \n}\n\nexport class Patient {\n  constructor(\n    public id: number,\n    public name: string,\n    public nhsid: string) { }    \n}\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private _router: Router, private _http: Http){}\n\n  obtainAccessToken(loginData){\n    let params = new URLSearchParams();\n    params.append('username',loginData.username);\n    params.append('password',loginData.password);\n    params.append('grant_type','password');\n    params.append('scope','webclient');\n    // params.append('client_id','fooClientIdPassword');\n    // headers.append(\"Authorization\", \"Basic \" + btoa(username + \":\" + password));\n    // let headers = new Headers({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8', 'Authorization': 'Basic '+btoa(\"fooClientIdPassword:secret\")});\n\n    let headers = new Headers({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8', 'Authorization': 'Basic '+btoa(\"eagleeye:thisissecret\")});\n    // this._http.post(url, data, {headers: headers})\n    let options = new RequestOptions({ headers: headers });\n\n\n \t// http://51.141.9.85:5555/api/auth/auth/oauth/token\n \t// http://51.141.9.85:8091/auth/oauth/token\n\n\n    console.log(params.toString());\n     this._http.post('http://51.141.9.85:5555/api/auth/auth/oauth/token', params.toString(), options)\n    .map(res => res.json())\n    .subscribe(\n      data => this.saveToken(data),\n      err => alert('Invalid Credentials')\n    );\n  }\n\n\n  saveToken(token){\n    var expireDate = new Date().getTime() + (1000 * token.expires_in);\n    Cookie.set(\"access_token\", token.access_token, expireDate);\n    console.log('Obtained Access token');\n    this._router.navigate(['/']);\n  }\n\n  // 'Content-type': 'application/x-www-form-urlencoded; charset=utf-8',\n  getResource(resourceUrl) : Observable<Foo>{\n    var headers = new Headers({'Authorization': 'Bearer '+Cookie.get('access_token')});\n    console.log(Cookie.get('access_token'));\n\n    var options = new RequestOptions({ headers: headers });\n    return this._http.get(resourceUrl, options)\n                   .map((res:Response) => res.json())\n                   .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n  getResourceHTML(resourceUrl) {\n    var headers = new Headers({'Authorization': 'Bearer '+Cookie.get('access_token')});\n    console.log(Cookie.get('access_token'));\n    var options = new RequestOptions({ headers: headers });\n    this._http.get(resourceUrl, options);\n  }\n\n  checkCredentials(){\n    if (!Cookie.check('access_token')){\n        this._router.navigate(['/login']);\n    }\n  }\n\n  logout() {\n    Cookie.delete('access_token');\n    this._router.navigate(['/login']);\n  }\n  \n  private foosUrl1 = 'http://51.141.9.85:5555/api/my-patient-microservice/demo/all';\n    \n  getAllPatientWithObservable(): Observable<Patient[]> {\n    return this._http.get(this.foosUrl1)\n        .map(this.extractData)\n        .catch(this.handleErrorObservable);\n\t} \n\t\nprivate extractData2(res: Response) {\n   let body = res.text();  // If response is a JSON use json()\n   if (body) {\n       return  body;\n    } else {\n       return {};\n    }\n}\n\nprivate handleError2(error: any) {\n   // In a real world app, we might use a remote logging infrastructure\n   // We'd also dig deeper into the error to get a better message\n   let errMsg = (error.message) ? error.message :\n   error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(errMsg); // log to console instead\n        return Observable.throw(errMsg);\n}\n\t\n\tprivate handleError3(error: any): Promise<any> {\n    console.error('Some error occured', error);\n    return Promise.reject(error.message || error);\n  }\n  \n  createTodo(patient: Patient): Promise<Patient> {\n    return this._http.post('http://51.141.9.85:5555/api/my-patient-microservice/demo/createpatient4', patient)\n      .toPromise().then(response => response.json() as Patient)\n      .catch(this.handleError3);\n  }\n  \t\n  createPatient3(patient: Patient): Observable<any> {\n    return this._http.post(\"http://51.141.9.85:5555/api/my-patient-microservice/demo/createpatient4\", patient)\n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\n \n  }\n  \t\n  createPatient(patient: Patient): Observable<Patient> {\n     return this._http.post(\"http://51.141.9.85:5555/api/my-patient-microservice/demo/createpatient\", patient)\n     .map(this.extractData2)\n     .catch(this.handleError2);\n    \n \n  }\n  \n  createPatient2(patient: Patient): Observable<Patient> {\n    return this._http.post(\"http://51.141.9.85:5555/api/my-patient-microservice/demo/createpatient\", patient)\n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\n \n  }\n  \n  \n  \n  addPatientWithObservable(patient:Patient): Observable<Patient> {\n\t    let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this._http.post(\"http://51.141.9.85:5555/api/my-patient-microservice/demo/createpatient4\", patient, options)\n                   .map(this.extractData)\n                   .catch(this.handleErrorObservable);\n    }\n    \n    \n\n    private handleErrorPromise (error: Response | any) {\n\tconsole.error(\"X \" + error.message || error);\n\tconsole.error(\"Y \" + error.errorCode)\n\treturn Promise.reject(error.message || error);\n    }\n    \n  \n  \n  private extractData(res: Response) {\n    let body = res.json();\n    console.log(\"U \" + body);\n    return body;\n  } \n\n\tprivate handleErrorObservable (error: Response | any) {\n\t    console.error(error.message || error);\n\t    return Observable.throw(error.message || error);\n\t} \n    \n  updatePatient(patient: Patient): Observable<Patient> {\n    return this._http.put(\"http://51.141.9.85:5555/api/my-patient-microservice/demo/createpatient\", patient)\n      .map((res:Response) => res.json())\n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\t\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html,body {\\n\\theight: 100%;\\n}\\n\\nbody.my-login-page {\\n\\tbackground-color: #f7f9fb;\\n\\tfont-size: 14px;\\n}\\n\\n.my-login-page .brand {\\n\\twidth: 90px;\\n\\theight: 90px;\\n\\toverflow: hidden;\\n\\tborder-radius: 50%;\\n\\tmargin: 0 auto;\\n\\tmargin: 40px auto;\\n\\tbox-shadow: 0 0 40px rgba(0,0,0,.05);\\n}\\n\\n.my-login-page .brand img {\\n\\twidth: 100%;\\n}\\n\\n.my-login-page .card-wrapper {\\n\\twidth: 400px;\\n\\tmargin: 0 auto;\\n}\\n\\n.my-login-page .card {\\n\\tborder-color: transparent;\\n\\tbox-shadow: 0 0 40px rgba(0,0,0,.05);\\n}\\n\\n.my-login-page .card.fat {\\n\\tpadding: 10px;\\n}\\n\\n.my-login-page .card .card-title {\\n\\tmargin-bottom: 30px;\\n}\\n\\n.my-login-page .form-control {\\n\\tborder-width: 2.3px;\\n}\\n\\n.my-login-page .form-group label {\\n\\twidth: 100%;\\n}\\n\\n.my-login-page .btn.btn-block {\\n\\tpadding: 12px 10px;\\n}\\n\\n.my-login-page .margin-top20 {\\n\\tmargin-top: 20px;\\n}\\n\\n.my-login-page .no-margin {\\n\\tmargin: 0;\\n}\\n\\n.my-login-page .footer {\\n\\tmargin: 40px 0;\\n\\tcolor: #888;\\n\\ttext-align: center;\\n}\\n\\n@media screen and (max-width: 425px) {\\n\\t.my-login-page .card-wrapper {\\n\\t\\twidth: 90%;\\n\\t\\tmargin: 0 auto;\\n\\t}\\n}\\n\\n@media screen and (max-width: 320px) {\\n\\t.my-login-page .card.fat {\\n\\t\\tpadding: 0;\\n\\t}\\n\\n\\t.my-login-page .card.fat .card-body {\\n\\t\\tpadding: 15px;\\n\\t}\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/css/login.css\n// module id = 160\n// module chunks = 1","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 89;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 89\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\nimport {AppService, Patient} from './app.service'\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { ReactiveFormsModule, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'add-patient',\n  providers: [AppService],\n  template: `\n  \n   <home-header></home-header> \n  \n  <div class=\"container-fluid\">\n    <h1 class=\"col-sm-12\">Add a Patient</h1>\n</div>\n\n\n <div class=\"container\">\n <div class=\"row\">\n  <form novalidate [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-row\">\n    <div class=\"col-md-4 mb-3\">\n      <label for=\"validationServer01\">First name</label>\n      <input type=\"text\" class=\"form-control\" id=\"validationServer01\" formControlName=\"Firstname\" placeholder=\"First name\" required>\n    <div  style=\"color:red; font-size: 11px;\">\n          {{ namemessage }}\n        </div>\n    </div>\n    <div class=\"col-md-4 mb-3\">\n      <label for=\"validationServer02\">Last name</label>\n      <input type=\"text\" class=\"form-control\" id=\"validationServer02\" formControlName=\"Lastname\" placeholder=\"Last name\" required>\n    </div>\n    <div class=\"col-md-4 mb-3\">\n      <label for=\"validationServer03\">NHS id</label>\n      <input type=\"text\" class=\"form-control\" id=\"validationServer03\" formControlName=\"NHSid\" placeholder=\"NHS id\" required>\n\t  <div  style=\"color:red; font-size: 11px;\">\n          {{ nhsmessage }}\n        </div>\n\n    </div>\n    \n    \n    <!--\n    <div class=\"col-md-4 mb-3\">\n      <label for=\"validationServerUsername\">Username</label>\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroupPrepend3\">@</span>\n        </div>\n        <input type=\"text\" class=\"form-control is-invalid\" id=\"validationServerUsername\" placeholder=\"Username\" aria-describedby=\"inputGroupPrepend3\" required>\n        <div class=\"invalid-feedback\">\n          Please choose a username.\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"col-md-6 mb-3\">\n      <label for=\"validationServer03\">City</label>\n      <input type=\"text\" class=\"form-control is-invalid\" id=\"validationServer03\" placeholder=\"City\" required>\n      <div class=\"invalid-feedback\">\n        Please provide a valid city.\n      </div>\n    </div>\n    <div class=\"col-md-3 mb-3\">\n      <label for=\"validationServer04\">State</label>\n      <input type=\"text\" class=\"form-control is-invalid\" id=\"validationServer04\" placeholder=\"State\" required>\n      <div class=\"invalid-feedback\">\n        Please provide a valid state.\n      </div>\n    </div>\n    <div class=\"col-md-3 mb-3\">\n      <label for=\"validationServer05\">Zip</label>\n      <input type=\"text\" class=\"form-control is-invalid\" id=\"validationServer05\" placeholder=\"Zip\" required>\n      <div class=\"invalid-feedback\">\n        Please provide a valid zip.\n      </div>\n    </div>\n    -->\n  </div>\n  \n  \n  <button class=\"btn btn-primary\" type=\"submit\">Add</button>\n</form>\n\n    \n  </div>\n  <br>\n  <div class=\"container\">\n  <label>{{ mymessage }}</label>\n  </div>\n  \n  \n </div>\n \n \n <script>\n// Example starter JavaScript for disabling form submissions if there are invalid fields\n(function() {\n  'use strict';\n\n  window.addEventListener('load', function() {\n    var form = document.getElementById('needs-validation');\n    form.addEventListener('submit', function(event) {\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      form.classList.add('was-validated');\n    }, false);\n  }, false);\n})();\n</script>\n  `\n})\n\nexport class AddPatientComponent {\n\n    userForm: FormGroup;\n    mymessage: string = '';\n    namemessage: string = '';\n    nhsmessage: string = '';\n    \n    \n    constructor(private _service:AppService, private _http: Http) {}\n\n\tngOnInit(): void {\n\t   \n\t   this.userForm = new FormGroup({\n\t      Firstname: new FormControl('', Validators.required),\n\t      Lastname: new FormControl('', Validators.required),\n\t      NHSid: new FormControl('', Validators.required)\n    \t}); \n\n\t}\n\t   \n\t//patient = new Patient();\n\terrorMessage: String;\n\t   \n    onSubmit() {\n    \tconsole.log(\"onsubmit\");\n    \t\n    \tthis.namemessage = \"\";\n    \tthis.nhsmessage = \"\";\n    \t\n    \tif (this.userForm.valid) {\n      \t\tconsole.log(\"valid\");\n      \n      \t\tlet patient: Patient = new Patient(0,\n          \t\tthis.userForm.controls['Firstname'].value + \" \" + this.userForm.controls['Lastname'].value,\n          \tthis.userForm.controls['NHSid'].value);\n          \n            //this._service.createTodo(patient)\n            \n            \n            //this._service.addPatientWithPromise(patient);\n            \n            this.addPatientWithPromise2(patient);\n            //this.mymessage = \"hbhbh\";      \n            \n     /*       \n          \tthis._service.createPatient3(patient).subscribe(\n          \t\terror => {\n        \t\t\tconsole.log(\"jjjj\" + error);\n      \t\t\t},\n      \t\t\t\n        (error) => this.handleSubmitError(error)     \t\t\n        \t);\n     */   \t\n          \t\n          \t//this.userForm.reset();\n      \t\t// this.router.navigate(['/user']);\n    \t}\n    \telse {\n    \t\tconsole.log(\"invalid\");\n    \t\tthis.mymessage = \"All values are mandatory.\";\n    \t}\n    }\n    \n  \n  \n  addPatientWithPromise2(patient:Patient) {\n      let headers = new Headers({ 'Content-Type': 'application/json' });\n      let options = new RequestOptions({ headers: headers });\n\t  this._http.post(\"http://51.141.9.85:5555/api/my-patient-microservice/demo/createpatient4\", patient, options)\n\t      .subscribe(\n\t        res => {\n\t          console.log(\"AAA\" + res);\n\t          this.mymessage = \"Added Patient\";\n\t          this.userForm.reset();\n\t        },\n\t        err => {\n\t          console.log(\"Error occured1\" + err);\n\t          const body = err.json() || '';   \n    \t\t  //const error3 = body.error || JSON.stringify(body);\n    \t\t  const error3 = JSON.stringify(body);\n    \t\t  \n    \t\t  const error4 = JSON.parse(error3)\n\t          \n\t          console.log(\"Error occured2 =\" + error3 );\n\t          //console.log(\"Error occured3 = \" + error4.errorCode );\n\t          console.log(\"Error occured4 =\" + error4.status );\n\t          \n\t          var count = Object.keys(error4.errors).length;\n\t          \n\t          console.log(\"Error occured5 =\" + count );\n\t          \n\t          this.mymessage = \"\";\n\t          \n\t          error4.errors.forEach(element => {\n\t\t\t\t    console.log(element.field);\n\t\t\t\t    console.log(element.defaultMessage);\n\t\t\t\t    \n\t\t\t\t    if (element.field == 'name') { this.namemessage = element.defaultMessage; }\n\t\t\t\t    if (element.field == 'nhsid')  { this.nhsmessage = element.defaultMessage; }\n\t\t\t\t    //this.mymessage = this.mymessage + element.defaultMessage + \" \";\n\t\t\t  });\n\t\t\t\t\n\t          \n\t          \n\t        }\n      );\n  }\n  \n  addPatientWithPromise(patient:Patient): Promise<Patient> {\n\tlet headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this._http.post(\"http://51.141.9.85:5555/api/my-patient-microservice/demo/createpatient4\", patient, options).toPromise()\n\t           .then(this.extractData1)\n                   .catch(this.handleErrorPromise1);\n    }\t\t\n    \n     extractData1(res: Response) {\n    console.log(\"U1 \" + res);\n    console.log(\"U2 \" + res.status);\n    this.mymessage = \"resp status\";\n    //this.changeName();\n    \n  if (res != null) {\n    let body = res.json();\n    console.log(\"U \" + body);\n    return body;\n  } else { // else return an empty dummy json, doesn't really work here\n    return '[{\"id\": \"\", \"userId\": \"\", \"userName\": \"\", \"type\": { \"name\": \"\" }, \"date\": {' +\n    '\"startDate\": \"\", \"endDate\": \"\", \"startTime\": \"\", \"endTime\": \"\" }   }]'; }\n}\n\n handleErrorPromise1(error: Response | any) {\n  console.log('Errorhandling triggered'); \n  let errMsg: string;\n  if (error instanceof Response) {\n    console.log('Errorhandling if-block'); // this triggers on a 404\n    //const body = error.json() || '';\n    \n    //const err = body.error || JSON.stringify(body);\n    const err = error;\n    errMsg = `${error.status} - ${error.statusText || '' } ${err}`;\n  } else {\n    errMsg = error.message ? error.message : error.toString();\n  }\n  console.error('Error ', errMsg); // this never appears in the log though\n  return Observable.throw(errMsg);\n}\n  \n \n \n  changeName():void{\n    this.mymessage = 'New First Name';\n  } \n  \n  \n  \n  \n  \n  \n  \n   protected handleSubmitSuccess(entry: any) {\n     console.log(\"handleSubmitSuccess\");\n   }\n  \n  \n  \n  \n   protected handleSubmitError(error: any) {\n\t  console.log(\"handleSubmitError\");\n\t  if (error.status === 400) {\n\t    const data = error.json();\n\t    \n\t    console.log(data);\n\t    \n\t    const fields = Object.keys(data || {});\n\t    fields.forEach((field) => {\n\t      //const control = this.findFieldControl(field);\n\t      //const errors = this.fetchFieldErrors(data, field);\n\t      //control.setErrors(errors);\n\t    });\n\t  }\n\t}\n   \n   \n   \n   \n   \n    \n    \n    \n    \n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/add-patient.component.ts","import {Component} from '@angular/core';\n \n@Component({\n    selector: 'app-root',\n    template: `\n<router-outlet></router-outlet>`\n})\n\nexport class AppComponent {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule }   from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login.component';\nimport { HomeComponent } from './home.component';\nimport { HomeDescriptionComponent } from './home-description.component';\nimport { FooComponent } from './foo.component';\nimport { PatientComponent } from './patient.component';\nimport { ViewPatientsComponent } from './view-patients.component';\nimport { AddPatientComponent } from './add-patient.component';\nimport { FindPatientComponent } from './find-patient.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HomeDescriptionComponent,\n    LoginComponent,\n    FooComponent,\n    PatientComponent,\n    ViewPatientsComponent,\n    AddPatientComponent,\n    FindPatientComponent   \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    RouterModule.forRoot([\n     { path: '', component: HomeDescriptionComponent },\n     { path: 'login', component: LoginComponent },\n     { path: 'viewpatients2', component: PatientComponent },\n     { path: 'viewpatients', component: ViewPatientsComponent },\n     { path: 'addpatient', component: AddPatientComponent },\n     { path: 'findpatient', component: FindPatientComponent },\n     { path: 'foo', component: FooComponent }])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit, Input } from '@angular/core';\nimport {AppService, Patient} from './app.service'\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'find-patient',\n  providers: [AppService],\n  template: `\n  \n   <home-header></home-header> \n  \n  <div class=\"container-fluid\">\n    <h1 class=\"col-sm-12\">Find/Edit Patients</h1>\n</div>\n\n\n<div class=\"container\">\n\t\n\t\t<div class=\"form-group row\">\n\t\t\t\t<div class=\"col-xs-9\">\n\t\t\t\t    <input class=\"form-control\" type=\"text\" id=\"search\" [(ngModel)]=\"xxx\" placeholder=\"Search\">\t\t\t\t\t\n\t\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"form-group row\">\n\t\t\t\t<div class=\"col-xs-9\">\n\t\t\t\t\t<select class=\"form-control\" id=\"searchtype\" [(ngModel)]=\"searchtype\" >\n\t\t\t\t\t    <option selected>Choose...</option>\n\t\t\t\t\t    <option value=\"1\">Id</option>\n\t\t\t\t\t    <option value=\"2\">Name</option>\n\t\t\t\t\t    <option value=\"3\">NHS Id</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"form-group row\">\n\t\t\t<div class=\"offset-xs-3 col-xs-9\">\n\t\t\t\t<button class=\"btn btn-primary\" (click)=\"getPatient()\">Search</button>\n\t\t\t</div>\n\t\t</div>\n\t\n</div>\n \n  <br>\n  <div class=\"container\">\n  <label>{{ mymessage }}</label>\n  </div>\n   \n \n  `\n})\n\nexport class FindPatientComponent {\n\n    \n    constructor(private _service:AppService, private _http: Http) {}\n    xxx: string;\n    searchtype: string;\n    mymessage: string = '';\n    \n    \n\tngOnInit(): void {\n\t    //this.xxx = \"kk\"\n        \n\t}\n  \n    // this.foosUrl+this.foo.id\n    getPatient(){\n    \tthis.mymessage = 'xxx = ' + this.xxx + ' searchtype = ' + this.searchtype;\n    \t\n    \t\n    \tif (this.searchtype == \"undefined\" || this.searchtype == \"0\")\n    \t{\n    \t\tthis.mymessage = \"Please select a value from dropdown\";\n    \t}\n        \n    }\n    \n    \n    \n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/find-patient.component.ts","import { Component, OnInit } from '@angular/core';\nimport {AppService, Foo} from './app.service'\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'foo-details',\n  providers: [AppService],\n  template: `\n  \n  <home-header></home-header>\n  <div class=\"container\">\n    <h1 class=\"col-sm-12\">Foo Details</h1>\n    <div class=\"col-sm-12\">\n        <label class=\"col-sm-3\">ID</label> <span>{{foo.id}}</span>\n    </div>\n    <div class=\"col-sm-12\">\n        <label class=\"col-sm-3\">Name</label> <span>{{foo.name}}</span>\n    </div>\n    <div class=\"col-sm-12\">\n        <button class=\"btn btn-primary\" (click)=\"getFoo()\" type=\"submit\">New Foo</button>        \n    </div>\n</div>\n\n<ul>\n<li *ngFor=\"let foo of foos\">\n    id: {{foo.id}}, name: {{foo.name}}, nhsid: {{foo.nhsid}}\n  </li>\n </ul>\n  `\n})\n\nexport class FooComponent {\n\n    foos: Foo[];   \n    observableFoos: Observable<Foo[]>\n    \n    public foo = new Foo(1,'sample foo','kk');\n    private foosUrl = 'http://51.141.9.85:5555/api/my-patient-microservice/demo/getpatient?id=1';\n    \n    constructor(private _service:AppService, private _http: Http) {}\n\n\tngOnInit(): void {\n\t    \n        //this.observableFoos = this.getAllPatientWithObservable()\n        this.observableFoos = this._service.getAllPatientWithObservable()\n        \n        this.observableFoos.subscribe(\n      \t\tfoos => this.foos = foos\n      \t);\n      \n        \n\t}\n  \n    // this.foosUrl+this.foo.id\n    getFoo(){\n        this._service.getResource(this.foosUrl)\n         .subscribe(\n                     data => this.foo = data,\n                     error =>  this.foo.name = 'Error');\n    }\n    \n    \n    \n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/foo.component.ts","import { Component, OnInit } from '@angular/core';\nimport {AppService} from './app.service'\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'home-description-details',\n  providers: [AppService],\n  template: ` \n  \n  <home-header></home-header>\n  <br>\n  <div class=\"container\">\n    This is a simple Oauth2 Angular4, Spring Microservices example.\n    <br>\n    <br>\n    The Spring discovery service Eurareka is : <a href=\"http://51.141.9.85:8761\" target=\"_blank\">http://51.141.9.85:8761</a>\n    \n  </div>\n\n  `\n})\n\nexport class HomeDescriptionComponent {\n\n    \n    constructor(private _service:AppService) {} \n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home-description.component.ts"],"sourceRoot":""}